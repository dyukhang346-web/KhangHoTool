# -*- coding: utf-8 -*-
from googletrans import Translator, LANGUAGES
from colorama import Style, init
import pyfiglet
import sys
from getpass import getpass  
import os
import json
import socket
from pathlib import Path
from datetime import datetime


init()

def rgb_ansi(r, g, b):
    return f"\033[38;2;{r};{g};{b}m"

def gradient_text(text, start, end):
    result = ""
    n = len(text)
    for i, c in enumerate(text):
        t = i / max(1, n - 1)
        r = int(start[0] + (end[0] - start[0]) * t)
        g = int(start[1] + (end[1] - start[1]) * t)
        b = int(start[2] + (end[2] - start[2]) * t)
        result += f"{rgb_ansi(r, g, b)}{c}\033[0m"
    return result

def banner():
    text = "KhangHo"
    ascii_art = pyfiglet.figlet_format(text, font="standard")
    lines = ascii_art.splitlines()
    total_chars = sum(len(line.replace(" ", "")) for line in lines)

    start = (148, 0, 211)   # t√≠m
    end = (0, 255, 255)     # cyan

    def lerp(a, b, t):
        return int(a + (b - a) * t)

    char_count = 0
    colored_ascii = ""

    for line in lines:
        for c in line:
            if c == " ":
                colored_ascii += " "
            else:
                t = char_count / max(1, total_chars - 1)
                r = lerp(start[0], end[0], t)
                g = lerp(start[1], end[1], t)
                b = lerp(start[2], end[2], t)
                colored_ascii += f"{rgb_ansi(r, g, b)}{c}\033[0m"
                char_count += 1
        colored_ascii += "\n"

    # Gradient t√≠m ‚Üí ƒë·ªè cho th√¥ng tin
    start_info = (148, 0, 211)
    end_info = (255, 0, 0)

    print(colored_ascii)
    print(gradient_text("‚ïê" * 60, start_info, end_info))
    print(gradient_text(" Admin      : H·ªì Duy Khang", start_info, end_info))
    print(gradient_text(" Facebook   : https://www.facebook.com/d4fresytDK", start_info, end_info))
    print(gradient_text(" TikTok     : https://tiktok.com/anhbanhatbox", start_info, end_info))
    print(gradient_text(" Gmail      : dyukhang346@gmail.com", start_info, end_info))
    print(gradient_text("‚ïê" * 60, start_info, end_info))
    print()

def gioi_thieu():
    print(gradient_text("Tool D·ªãch VƒÉn B·∫£n ƒêa Ng√¥n Ng·ªØ", (148, 0, 211), (255, 0, 0)))
    print(gradient_text("By: H·ªì Duy Khang\n", (148, 0, 211), (255, 0, 0)))

def dich_van_ban(van_ban, src_lang, list_ngon_ngu):
    translator = Translator()
    ket_qua = {}
    for lang_code in list_ngon_ngu:
        try:
            result = translator.translate(van_ban, src=src_lang, dest=lang_code)
            ket_qua[lang_code] = result.text
        except Exception as e:
            ket_qua[lang_code] = f"L·ªói d·ªãch: {e}"
    return ket_qua

def hien_thi_ngon_ngu():
    print(gradient_text("\nDanh s√°ch c√°c ng√¥n ng·ªØ kh·∫£ d·ª•ng:", (148, 0, 211), (255, 0, 0)))
    for code, name in sorted(LANGUAGES.items()):
        print(gradient_text(f"{code}: {name}", (148, 0, 211), (255, 0, 0)))

def nhap_ngon_ngu(dest_only=False):
    while True:
        nguoi_dung = input(
            gradient_text(
                ("\nNh·∫≠p m√£ ng√¥n ng·ªØ c·∫ßn d·ªãch" if not dest_only else "\nNh·∫≠p m√£ ng√¥n ng·ªØ g·ªëc: ")
                + " ('all' = t·∫•t c·∫£): ",
                (148, 0, 211), (255, 0, 0)
            )
        ).strip().lower()

        if nguoi_dung == 'all' and not dest_only:
            return list(LANGUAGES.keys())
        elif dest_only:  
            if nguoi_dung in LANGUAGES:
                return nguoi_dung
            else:
                print(gradient_text("‚ùå M√£ ng√¥n ng·ªØ kh√¥ng h·ª£p l·ªá!", (255, 0, 0), (148, 0, 211)))
                hien_thi_ngon_ngu()
        else:
            list_codes = [code.strip() for code in nguoi_dung.split(',')]
            invalid = [c for c in list_codes if c not in LANGUAGES]
            if invalid:
                print(gradient_text("‚ùå M√£ ng√¥n ng·ªØ kh√¥ng h·ª£p l·ªá: " + str(invalid), (255, 0, 0), (148, 0, 211)))
                hien_thi_ngon_ngu()
            else:
                return list_codes

def nhap_nhieu_dong():
    print(gradient_text("üëâ Nh·∫≠p vƒÉn b·∫£n (Enter tr·ªëng = xong, g√µ 'e' = h·ªßy):", (148, 0, 211), (255, 0, 0)))
    dong_van_ban = []
    while True:
        try:
            dong = input()
            if dong.strip().lower() == "e":
                return None
            if dong.strip() == "":
                break
            dong_van_ban.append(dong)
        except KeyboardInterrupt:
            break
    return "\n".join(dong_van_ban)

def menu():
    print(gradient_text("\n========= MENU =========", (148, 0, 211), (255, 0, 0)))
    print(gradient_text("1. D·ªãch t·ª´ Ti·∫øng Vi·ªát sang ng√¥n ng·ªØ kh√°c", (148, 0, 211), (255, 0, 0)))
    print(gradient_text("2. D·ªãch t·ª´ ng√¥n ng·ªØ kh√°c sang Ti·∫øng Vi·ªát", (148, 0, 211), (255, 0, 0)))
    print(gradient_text("3. Xem danh s√°ch ng√¥n ng·ªØ", (148, 0, 211), (255, 0, 0)))
    print(gradient_text("4. Tho√°t", (148, 0, 211), (255, 0, 0)))
    print(gradient_text("========================", (148, 0, 211), (255, 0, 0)))

# ===================== KEY CHECK + MAIN =====================
def check_key():
    CORRECT_KEY = "TDNG24032014"  
    MAX_TRIES = 5


    for attempt in range(1, MAX_TRIES + 1):
        entered = input(gradient_text("Nh·∫≠p key ƒë·ªÉ s·ª≠ d·ª•ng tool: ", (148, 0, 211), (255, 0, 0)))

        if entered == CORRECT_KEY:
            print(gradient_text("‚úÖ Key h·ª£p l·ªá\n", (0, 255, 0), (148, 0, 211)))
            return True
        else:
            remaining = MAX_TRIES - attempt
            if remaining > 0:
                print(gradient_text(f"‚ùå Key kh√¥ng ƒë√∫ng. C√≤n {remaining} l·∫ßn th·ª≠.", (255, 0, 0), (148, 0, 211)))
            else:
                print(gradient_text("‚ùå B·∫°n ƒë√£ nh·∫≠p sai qu√° nhi·ªÅu l·∫ßn. Tho√°t ch∆∞∆°ng tr√¨nh.", (255, 0, 0), (148, 0, 211)))
    return False


if __name__ == "__main__":
    if not check_key():
        sys.exit(1)

    banner()
    gioi_thieu()

    while True:
        menu()
        lua_chon = input("\033[96mCh·ªçn ch·ª©c nƒÉng (1-4): \033[0m").strip()  # Gi·ªØ nguy√™n m√†u cyan

        # 1. D·ªãch t·ª´ ti·∫øng Vi·ªát sang nhi·ªÅu ng√¥n ng·ªØ
        if lua_chon == "1":
            van_ban_day_du = nhap_nhieu_dong()
            if van_ban_day_du:
                hien_thi_ngon_ngu()
                list_ngon_ngu = nhap_ngon_ngu()
                print(gradient_text("\nƒêang d·ªãch............\n", (148, 0, 211), (255, 0, 0)))
                ket_qua_dich = dich_van_ban(van_ban_day_du, "vi", list_ngon_ngu)

                for lang_code, text_dich in ket_qua_dich.items():
                    print(gradient_text(f"[{lang_code} - {LANGUAGES[lang_code]}]:", (148, 0, 211), (255, 0, 0)))
                    print(gradient_text(text_dich, (148, 0, 211), (255, 0, 0)))
                    print(gradient_text("-" * 50, (148, 0, 211), (255, 0, 0)))

        # 2. D·ªãch t·ª´ ng√¥n ng·ªØ kh√°c sang Ti·∫øng Vi·ªát
        elif lua_chon == "2":
            hien_thi_ngon_ngu()
            src_lang = nhap_ngon_ngu(dest_only=True)
            van_ban_day_du = nhap_nhieu_dong()
            if van_ban_day_du:
                print(gradient_text("\nƒêang d·ªãch sang Ti·∫øng Vi·ªát............\n", (148, 0, 211), (255, 0, 0)))
                ket_qua_dich = dich_van_ban(van_ban_day_du, src_lang, ["vi"])
                print(gradient_text(f"[{src_lang} ‚Üí vi]:", (148, 0, 211), (255, 0, 0)))
                print(gradient_text(ket_qua_dich["vi"], (148, 0, 211), (255, 0, 0)))
                print(gradient_text("-" * 50, (148, 0, 211), (255, 0, 0)))

        # 3. Xem danh s√°ch ng√¥n ng·ªØ
        elif lua_chon == "3":
            hien_thi_ngon_ngu()

        # 4. Tho√°t
        elif lua_chon == "4":
            print(gradient_text("\nC·∫£m ∆°n ƒë√£ s·ª≠ d·ª•ng! Tho√°t ch∆∞∆°ng tr√¨nh.", (255, 0, 0), (148, 0, 211)))
            sys.exit()

        else:
            print(gradient_text("‚ùå L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá, vui l√≤ng th·ª≠ l·∫°i!", (255, 0, 0), (148, 0, 211)))
